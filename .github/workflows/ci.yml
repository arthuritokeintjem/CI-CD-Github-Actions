name: CI + Deploy

on:
  push:
    branches: [ main ]
  pull_request:

# IZIN untuk Pages â€” letakkan di LEVEL WORKFLOW
permissions:
  contents: read
  pages: write
  id-token: write

# Best practice Pages: satu deploy aktif
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test-and-train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Train (smoke)
        run: python train.py

      - name: Upload artifacts (model & metrics)
        uses: actions/upload-artifact@v4
        with:
          name: model-and-metrics
          path: artifacts/

  deploy-pages:
    needs: test-and-train
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download model & metrics
        uses: actions/download-artifact@v4
        with:
          name: model-and-metrics
          path: artifacts

      - name: Generate HTML report
        run: |
          python - <<'PY'
          import json, pathlib, base64

          metrics = json.load(open('artifacts/metrics.json'))
          img_data = open("artifacts/confusion_matrix.png","rb").read()
          img_b64 = base64.b64encode(img_data).decode("utf-8")

          html = f"""
          <h1>CI Metrics Report</h1>
          <ul>
            <li><b>Accuracy:</b> {metrics['accuracy']:.3f}</li>
            <li><b>RMSE:</b> {metrics['rmse']:.3f}</li>
            <li><b>MAPE:</b> {metrics['mape']:.2f}%</li>
          </ul>
          <h2>Confusion Matrix</h2>
          <img src="data:image/png;base64,{img_b64}" />
          """

          pathlib.Path('public').mkdir(exist_ok=True)
          open('public/index.html','w').write(html)
          PY

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  docker-publish:
    needs: test-and-train           # <- penting: ambil artifact dari job training
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model-and-metrics
          path: artifacts

      - name: Prepare model folder
        run: |
          mkdir -p model
          cp artifacts/model.pkl model/model.pkl
          ls -la model

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/iris-api
          tags: |
            type=raw,value=latest
            type=sha

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}